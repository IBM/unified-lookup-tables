[project]
name = "ult"
version = "0.0.1"
description = "Describe your project here."
authors = [
    {name = "AI4SD team", email = "ai4sd@zurich.ibm.com"}
]
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
    "click>=8.1.7",
    "omegaconf>=2.3.0",
    "tqdm>=4.25.0",
    "ipykernel>=6.29.5",
    "pre-commit>=4.0.1",
    "pypdf2>=3.0.1",
    "ruff>=0.9.2",
    "pytest>=8.3.4",
    "licenseheaders>=0.8.8",
    "coloredlogs>=15.0.1",
    "pydantic>=2.10.5",
    "python-dotenv>=1.0.1",
    "json-repair>=0.35.0",
    "backoff>=2.2.1",
    "matplotlib>=3.10.0",
    "levenshtein>=0.26.1",
    "transformers==4.49.0",
    "accelerate>=1.3.0",
    "torch>=2.5.1",
    "datasets==3.2.0",
    "tensorboardx>=2.6.2.2",
    "asyncio>=3.4.3",
    "websockets==10.1",
    "deepspeed>=0.16.3",
    "setuptools>=75.8.0",
    "setfit>=1.1.1",
    "readchar>=4.2.1",
    "loguru>=0.7.3",
    "trl==0.14.0",
    "ipdb>=0.13.13",
    "mpi4py>=4.1.0",
    "openmpi>=5.0.8",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages]
find = { where = ["src"], include = ["ult"] }

[tool.setuptools.package-data]
"ult" = [
    "py.typed",
]

[tool.uv]
[[tool.uv.index]]
name = "PyPI"
url = "https://pypi.org/simple/"
priority = "primary"

# For extras
[project.optional-dependencies]
modeling = [
    "accelerate>=0.33.0",
    "click>=8.1.7",
    "datasets>=2.19.2",
    "pydantic>=2.6.3",
    "pydantic-settings>=2.2.1",
    "torch>=2.2.2",
    "transformers>=4.41.2",
]
data_analysis = [
    "click>=8.1.7",
    "datasets>=2.19.2",
    "ibm-generative-ai>=3.0.0",
    "pandas",
    "pydantic>=2.6.3",
    "pydantic-settings>=2.2.1",
    "python-dotenv",
    "loguru>=0.7.2",
]
dev = [
    "isort>=5.13.2",
    "jupyter>=1.0.0",
    "licenseheaders>=0.8.8",
    "mypy>=1.0.0",
    "pre-commit>=4.0.1",
    "pytest>=7.2.0",
    "pytest-cov>=2.8.1",
    "ruff>=0.7.4",
    "types-setuptools>=57.4.14",
]

# [tool.uv]
# For internal packages
# internal-package = { version = ">=0.0.1", url = "https://eu.artifactory.swg-devops.com/artifactory/api/pypi/res-accelerated-discovery-team-rxn-private-pypi-local/simple" }


[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"


[tool.mypy]
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "click.*",
    "datasets.*",
    "torch.*",
    "transformers.*",
    "yaml.*",
]
ignore_missing_imports = true

[tool.ruff]
# Include also Jupyter notebooks.
extend-include = ["*.ipynb"]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 100
indent-width = 4

target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
preview = true
select = [
    "E4", 
    "E7", 
    "E9", 
    "F", 
    "W291", 
    "W292", 
    "W505", 
    "E721",
    "I",
    "N801",
    "N802",
    "N803",
    "N804",
    "N805",
    "N806",
    "N816",
    "D101",
    "D102",
    "D103",
    "D105",
    "D106",
    "D107",
    "D300",
    "UP010",
    "UP011",
    "UP019",
    "UP032",
    "ARG",
    "PTH",
    "LOG001",
    "LOG002",
]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
preview = true
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
